#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

&lt {
  flavor = "balanced";
};

/ {
  behaviors {
    olmt: outer_left_mod_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "OUTER_LEFT_MOD_TAP";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      hold-trigger-key-positions = <21 22 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
    };

    lmt: inner_left_mod_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "INNER_LEFT_MOD_TAP";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
    };

    rmt: inner_right_mod_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "INNER_RIGHT_MOD_TAP";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
    };

    ormt: outer_right_mod_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "OUTER_RIGHT_MOD_TAP";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      hold-trigger-key-positions = <27 28 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
    };
  };
};

/ {
  combos {
    compatible = "zmk,combos";

    combo_out {
        timeout-ms = <50>;
        key-positions = <0 9>;
        bindings = <&out OUT_TOG>;
    };

    combo_game {
        timeout-ms = <50>;
        key-positions = <20 29>;
        bindings = <&tog 2>;
    };
  };
};

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      label = "BASE";
      bindings = <
        &kp Q &kp W &kp F &kp P &kp B &kp J &kp L &kp U &kp Y &kp SEMI
        &kp A &kp R &kp S &kp T &kp G &kp M &kp N &kp E &kp I &kp O
        &kp Z &olmt LALT X &olmt LCMD C &lmt LCTRL D &kp V &kp K &rmt RCTRL H &ormt RCMD COMMA &ormt RALT DOT &kp SLASH
        &tog 1 &kp LSHFT &kp BSPC &kp TAB &lt 1 SPACE &kp ENTER
      >;
    };

    raise_layer {
      label = "RAISE";
      bindings = <
        &kp GRAVE &kp N7 &kp N8 &kp N9 &kp BSLH &kp ESC &kp LA(LEFT) &kp UP &kp LA(RIGHT) &trans
        &kp APOS &kp N4 &kp N5 &kp N6 &kp LPAR &kp LBKT &kp LEFT &kp DOWN &kp RIGHT &kp MINUS
        &kp N0 &olmt LALT N1 &olmt LCMD N2 &lmt LCTRL N3 &kp RPAR &kp RBKT &rmt RCTRL EQUAL &trans &trans &trans
        &trans &trans &trans &trans &trans &trans
      >;
    };

    game_layer {
      label = "GAME";
      bindings = <
        &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
        &trans &kp X &kp C &kp D &trans &trans &kp H &kp COMMA &kp DOT &trans
        &kp ESC &trans &trans &trans &kp SPACE &trans
      >;
    };
  };
};
